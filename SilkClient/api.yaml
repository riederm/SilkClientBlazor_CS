openapi: 3.0.0
info:
  title: User and Asset Management API
  version: 1.0.0
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /loginSalt:
    get:
      summary: Get login salt for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSaltRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSaltResponse'

  /login:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthentication'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /assets:
    get:
      summary: Get a list of assets
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetListResponse'

    post:
      summary: Create a new asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAsset'
      responses:
        '201':
          description: Asset created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  '/asset/{id}':
    parameters:
      - $ref: '#/components/parameters/AssetId'
    get:
      summary: Get a specific asset by ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update an existing asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Asset updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          description: The username of the new user
        passwordHash:
          type: string
          description: The hashed password of the new user
        email:
          type: string
          format: email
          description: The email address of the new user
      required:
        - username
        - passwordHash
        - email

    RegistrationResponse:
      type: object
      properties:
        success:
          type: boolean
          enum:
            - true
        message:
          type: string
          description: A success message

    UserAuthentication:
      type: object
      properties:
        username:
          type: string
          description: The username of the user
        passwordHash:
          type: string
          description: The hashed password of the user
      required:
        - username
        - passwordHash

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          enum:
            - true
            - false
        message:
          type: string
          description: A success message
        token:
          type: string
          description: The BearerToken

    LoginSaltResponse:
      type: object
      properties:
        salt:
          type: string
          description: The login salt for the user

    LoginSaltRequest:
      type: object
      properties:
        username:
          type: string
          description: The username to get the salt for

    AssetListResponse:
      type: object
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'

    NewAsset:
      type: object
      properties:
        name:
          type: string
          description: The name of the asset
        description:
          type: string
          description: A description of the asset
        path:
          type: string
          description: The path to the asset

    Asset:
      type: object
      properties:
        id:
          type: string
          description: The ID of the asset
        name:
          type: string
          description: The name of the asset
        description:
          type: string
          description: A description of the asset
        path:
          type: string
          description: The path to the asset
        created:
          type: string
          format: date
          description: The date when the asset was created

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          enum:
            - false
        message:
          type: string
          description: An error message specifying the reason for the failure

  parameters:
    AssetId:
      name: id
      in: path
      required: true
      description: The ID of the asset
      schema:
        type: string
